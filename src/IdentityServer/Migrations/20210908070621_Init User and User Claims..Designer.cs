// <auto-generated />
using System;
using IdentityServer.DbContexts;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

namespace IdentityServer.Migrations
{
    [DbContext(typeof(IdentityDbContext))]
    [Migration("20210908070621_Init User and User Claims.")]
    partial class InitUserandUserClaims
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "3.1.15")
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("IdentityServer.Entities.User", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("ConcurrencyStamp")
                        .IsConcurrencyToken()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasColumnType("nvarchar(250)")
                        .HasMaxLength(250);

                    b.Property<bool>("IsActive")
                        .HasColumnType("bit");

                    b.Property<string>("Password")
                        .IsRequired()
                        .HasColumnType("nvarchar(250)")
                        .HasMaxLength(250);

                    b.Property<string>("Subject")
                        .IsRequired()
                        .HasColumnType("nvarchar(250)")
                        .HasMaxLength(250);

                    b.Property<string>("Username")
                        .IsRequired()
                        .HasColumnType("nvarchar(250)")
                        .HasMaxLength(250);

                    b.HasKey("Id");

                    b.HasIndex("Email")
                        .IsUnique();

                    b.HasIndex("Subject")
                        .IsUnique();

                    b.HasIndex("Username")
                        .IsUnique();

                    b.ToTable("Users");

                    b.HasData(
                        new
                        {
                            Id = new Guid("13229d33-99e0-41b3-b18d-4f72127e3971"),
                            ConcurrencyStamp = "14e1ec2c-df2d-4055-be9e-1eda412bcbad",
                            Email = "frank@someProvider.com",
                            IsActive = true,
                            Password = "password",
                            Subject = "d860efca-22d9-47fd-8249-791ba61b07c7",
                            Username = "Frank"
                        },
                        new
                        {
                            Id = new Guid("c6e8040f-b2c0-4986-af6c-d3b650e0927e"),
                            ConcurrencyStamp = "9a1e0192-bdaa-486e-8bc9-a863fdda771d",
                            Email = "quentin@someprovider.com",
                            IsActive = true,
                            Password = "Helios",
                            Subject = "5BE86359-073C-434B-AD2D-A3932222DABE",
                            Username = "Quentin"
                        });
                });

            modelBuilder.Entity("IdentityServer.Entities.UserClaim", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("ConcurrencyStamp")
                        .IsConcurrencyToken()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Type")
                        .IsRequired()
                        .HasColumnType("nvarchar(250)")
                        .HasMaxLength(250);

                    b.Property<Guid>("UserId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Value")
                        .IsRequired()
                        .HasColumnType("nvarchar(250)")
                        .HasMaxLength(250);

                    b.HasKey("Id");

                    b.HasIndex("UserId");

                    b.ToTable("UserClaims");

                    b.HasData(
                        new
                        {
                            Id = new Guid("9f5bd15a-11ef-4328-8ba8-c35fe30a8312"),
                            ConcurrencyStamp = "fb34c06c-4dcb-4e64-9af1-b685664b6351",
                            Type = "given_name",
                            UserId = new Guid("13229d33-99e0-41b3-b18d-4f72127e3971"),
                            Value = "Frank"
                        },
                        new
                        {
                            Id = new Guid("a9768c3a-57b3-457e-8304-29e2d479cf63"),
                            ConcurrencyStamp = "cfd2795e-55ce-46c8-9046-c1467e1add32",
                            Type = "family_name",
                            UserId = new Guid("13229d33-99e0-41b3-b18d-4f72127e3971"),
                            Value = "Underwood"
                        },
                        new
                        {
                            Id = new Guid("836751d7-dc80-470c-beeb-f58d75ff780f"),
                            ConcurrencyStamp = "8a4dd035-bb21-451d-9a13-07b2b528c6fe",
                            Type = "country",
                            UserId = new Guid("13229d33-99e0-41b3-b18d-4f72127e3971"),
                            Value = "En"
                        },
                        new
                        {
                            Id = new Guid("e86abbdd-bd7f-4973-a52a-a3ec2fbb10ad"),
                            ConcurrencyStamp = "511f21fb-05f0-4388-8166-1af7540743c7",
                            Type = "given_name",
                            UserId = new Guid("c6e8040f-b2c0-4986-af6c-d3b650e0927e"),
                            Value = "Quentin"
                        },
                        new
                        {
                            Id = new Guid("994933bd-ccfc-4251-a9aa-3909a3e482e6"),
                            ConcurrencyStamp = "f9ff7a42-d2c5-4754-a3f3-ae5b35aa485e",
                            Type = "family_name",
                            UserId = new Guid("c6e8040f-b2c0-4986-af6c-d3b650e0927e"),
                            Value = "Couissinier"
                        },
                        new
                        {
                            Id = new Guid("aa05cc22-f634-4619-8ee6-15a0f0a3a22a"),
                            ConcurrencyStamp = "ff03cf76-6c63-4eea-b04e-d1650655daf6",
                            Type = "country",
                            UserId = new Guid("c6e8040f-b2c0-4986-af6c-d3b650e0927e"),
                            Value = "Fr"
                        });
                });

            modelBuilder.Entity("IdentityServer.Entities.UserClaim", b =>
                {
                    b.HasOne("IdentityServer.Entities.User", "User")
                        .WithMany("Claims")
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });
#pragma warning restore 612, 618
        }
    }
}
